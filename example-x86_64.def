# Specify which CPU plugin to use. Plugins are just Python modules/packages,
# they are searched either on PYTHONPATH as usual or, additionally, in
# subdirectories "plugins" and "plugins/cpu" of the ScratchABit dir.
cpu x86_64_pymsasid

# Show up to this many raw bytes of code/data
show bytes 4

# This defines memory area at the given address of the given size
# and permissions (all of read/write/execute in this case)
area .bin 0x600000(0x1000) rwx
# Alternatively, end address (inclusive) can be specified:
#area .bin 0x600000-0x600fff rwx

# Load binary code to disassemble to the defined memory area
load example-x86_64.bin 0x600000

# Load binary code to disassemble to the defined memory area
# optional argument takes offset in source file and lenght with same syntax as area
#load example-x86_64.bin 0x600000 0x8           #Load area size from example-x86_64.bin, skipping first 8 bytes of example-x86_64.bin
#load example-x86_64.bin 0x600000 0x8(0x9)      #Load given size (0x9) from example-x86_64.bin, skipping first 0x8 bytes of example-x86_64.bin

# And/or load a structured executable (e.g. ELF) via a specific
# loader plugin ("elf" below).
#load example-x86_32.elf elf

# Start disassembly from the addresses defined below (left-hand
# side defines label for that address). Multiple entrypoints allowed.
# Address first in list is what will be shown after load.
[entrypoints]
start = 0x600000

# Alternatively or additionally, entrypoints/symbol addresses may
# be loaded from a file. Format is the same as above (actually, even
# more relaxed, each line may have arbitrary prefix and suffix around
# "label = addr" part).
#load "ld-provides.ld"
